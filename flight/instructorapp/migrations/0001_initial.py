# Generated by Django 5.2.5 on 2025-10-09 12:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('flightapp', '0002_user_last_login'),
    ]

    operations = [
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_name', models.CharField(max_length=100)),
                ('section_code', models.CharField(max_length=20, unique=True)),
                ('semester', models.CharField(choices=[('1st', '1st Semester'), ('2nd', '2nd Semester'), ('summer', 'Summer')], max_length=10)),
                ('academic_year', models.CharField(max_length=9)),
                ('schedule', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instructor', models.ForeignKey(limit_choices_to={'role': 'instructor'}, on_delete=django.db.models.deletion.CASCADE, to='flightapp.user')),
            ],
            options={
                'ordering': ['-academic_year', 'semester', 'section_code'],
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('activity_type', models.CharField(choices=[('flight_booking', 'Flight Booking Task'), ('seat_selection', 'Seat Selection Task'), ('payment_processing', 'Payment Processing Task')], default='flight_booking', max_length=20)),
                ('required_trip_type', models.CharField(choices=[('one_way', 'One Way'), ('round_trip', 'Round Trip'), ('multi_city', 'Multi City')], default='one_way', max_length=20)),
                ('required_origin', models.CharField(blank=True, max_length=100)),
                ('required_destination', models.CharField(blank=True, max_length=100)),
                ('required_departure_date', models.DateField(blank=True, null=True)),
                ('required_travel_class', models.CharField(choices=[('economy', 'Economy'), ('premium_economy', 'Premium Economy'), ('business', 'Business')], default='economy', max_length=20)),
                ('required_passengers', models.PositiveIntegerField(default=1)),
                ('required_max_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('instructions', models.TextField()),
                ('total_points', models.DecimalField(decimal_places=2, default=100.0, max_digits=6)),
                ('due_date', models.DateTimeField()),
                ('time_limit_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('activity_code', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('is_code_active', models.BooleanField(default=False)),
                ('code_generated_at', models.DateTimeField(blank=True, null=True)),
                ('code_expires_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('closed', 'Closed')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='instructorapp.section')),
            ],
            options={
                'verbose_name_plural': 'Activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivitySubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_code', models.CharField(max_length=8)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('max_score', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('started', 'Started'), ('submitted', 'Submitted'), ('graded', 'Graded')], default='started', max_length=20)),
                ('grading_details', models.JSONField(blank=True, default=dict)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='instructorapp.activity')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='flightapp.student')),
            ],
            options={
                'ordering': ['-submitted_at'],
                'unique_together': {('activity', 'student')},
            },
        ),
        migrations.CreateModel(
            name='SectionEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='instructorapp.section')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='flightapp.student')),
            ],
            options={
                'ordering': ['enrolled_at'],
                'unique_together': {('section', 'student')},
            },
        ),
    ]
